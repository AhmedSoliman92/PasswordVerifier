package passwordVerifier;

import java.util.regex.Pattern;

import passwordExceptions.PasswordShouldBeLargerThanEight_Exception;
import passwordExceptions.PasswordShouldHaveOneLowerCaseAtLeast_Exception;
import passwordExceptions.PasswordShouldHaveOneNumberAtLeast_Exception;
import passwordExceptions.PasswordShouldHaveOneUpperCaseLetterAtLeast_Exception;

	
	public class PasswordVerifier{
		
		public String verify(String password) throws PasswordShouldBeLargerThanEight_Exception,PasswordShouldHaveOneUpperCaseLetterAtLeast_Exception,PasswordShouldHaveOneLowerCaseAtLeast_Exception,PasswordShouldHaveOneNumberAtLeast_Exception {
			if(password==null) {
				throw new IllegalArgumentException("password should not be null");
			}
			verifyPasswordLargerThanEight(password);
			verifyPasswordHasOneUpperCaseLetterAtLeast(password);
			verifyPasswordHasOneLowerCaseAtLeast(password);
			verifyPasswordHasOneNumberAtLeast(password);
			 return password;
			
		}

		
		public String verifyPasswordLargerThanEight(String password)throws PasswordShouldBeLargerThanEight_Exception {
			if(password.length()>=9) {
				return password;
			}
			throw new PasswordShouldBeLargerThanEight_Exception("password should be larger than 8 chars");
		}
		
		public String verifyPasswordHasOneUpperCaseLetterAtLeast(String password)throws PasswordShouldHaveOneUpperCaseLetterAtLeast_Exception {
			Pattern upperCasePattern=Pattern.compile("[A-Z]",Pattern.CASE_INSENSITIVE);
			if(upperCasePattern.matcher(password).find()) {
				return password;
			}
			throw new PasswordShouldHaveOneUpperCaseLetterAtLeast_Exception("password should have one uppercase letter at least");
		}
		
		public String verifyPasswordHasOneLowerCaseAtLeast(String password) throws PasswordShouldHaveOneLowerCaseAtLeast_Exception {
			Pattern lowerCasePattern=Pattern.compile("[a-z]",Pattern.CASE_INSENSITIVE);
			if(lowerCasePattern.pattern().contains(password)) {
					return password;
			}
			
			throw new PasswordShouldHaveOneLowerCaseAtLeast_Exception("password should have one lowercase letter at least");
		}
		public String verifyPasswordHasOneNumberAtLeast(String password) throws PasswordShouldHaveOneNumberAtLeast_Exception {
			Pattern digitCasePatten = Pattern.compile("[0-9]");
			if(digitCasePatten.matcher(password).find()) {
				return password;
			}
			throw new PasswordShouldHaveOneNumberAtLeast_Exception("password should have one number at least");	
		}	
}